version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - REPOSITORY_URI=public.ecr.aws/h2v1o9z6
      - aws ecr-public get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - REPOSITORY_NAME=grpc-app
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_NAME/server:latest -f ./server/Dockerfile .
      - docker tag $REPOSITORY_NAME/server:latest $REPOSITORY_URI/$REPOSITORY_NAME/server:latest
      - docker tag $REPOSITORY_NAME/server:latest $REPOSITORY_URI/$REPOSITORY_NAME/server:$IMAGE_TAG
      - docker build -t $REPOSITORY_NAME/client:latest -f ./client/Dockerfile .
      - docker tag $REPOSITORY_NAME/client:latest $REPOSITORY_URI/$REPOSITORY_NAME/client:latest
      - docker tag $REPOSITORY_NAME/client:latest $REPOSITORY_URI/$REPOSITORY_NAME/client:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI/$REPOSITORY_NAME/server:latest
      - docker push $REPOSITORY_URI/$REPOSITORY_NAME/server:$IMAGE_TAG
      - docker push $REPOSITORY_URI/$REPOSITORY_NAME/client:latest
      - docker push $REPOSITORY_URI/$REPOSITORY_NAME/client:$IMAGE_TAG
      - aws eks update-kubeconfig --region us-east-1 --name grpc_app_cluster --role-arn arn:aws:iam::818157064519:role/service-role/codebuild-grpc-app-codebuild-service-role
      - cat /root/.kube/config
      - kubectl apply -f ./kubernetes/service.yml
      - kubectl apply -f ./kubernetes/server.yml
      - kubectl apply -f ./kubernetes/client.yml
      - kubectl rollout restart deployment/grpc-server-deployment
      - kubectl rollout restart deployment/grpc-client-deployment
